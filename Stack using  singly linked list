#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *next;
};
struct node *top,*newnode,*temp;
void display() 
{
    struct node *temp = top;
    int i = 1;
    printf("\nData in node is = \n");
    while (temp != NULL)
    {
        printf("Node %d) data: %d  address: %p  next address: %p\n", i, temp->data,temp,temp->next);
        temp = temp->next;
        i++;
    }
}
int main()
{
    int n=12,i,ch,b=12;
    printf("Enter the no of node = ");
    scanf("%d",&n);
    top=NULL;
    for( i=0;i<n;i++)
    
    {
        
        newnode=malloc(sizeof(struct node));
        
        printf("\nEnter the data = ");
        scanf("%d",&newnode->data);
        
        if(top==NULL)
        {
            top=newnode;
            temp=newnode;
        }
        
        else
        
        {
            temp->next=newnode;
            temp=newnode;
        }
        newnode->next = NULL;
        
        
    }
    display();
    printf("\nSize of structure = %d",sizeof(struct node));
    while(b!=0)
    {
        printf("\n1.push\n");
        printf("2.pop\n");
        printf("3.Exit\n");
        printf("Enter your choice = ");
        scanf("%d",&ch);
        switch(ch)
        {
            case 1:newnode=malloc(sizeof(struct node));
                   printf("Enter the data = ");
                   scanf("%d",&newnode->data);
                   if(top==NULL)
                   {
                       top=newnode;
                       newnode->next=NULL;
                   }
                   else
                   {
                       newnode->next=top;
                       top=newnode;
                   }
                   display();
                   break;
            case 2:if(top==NULL)
                   {
                       printf("list is empty");
                   }
                   else
                   {
                       temp=top;
                       top=top->next;
                       temp->next=NULL;
                       free(temp);
                   }
                   display();
                   break;
            case 3:b=0;
                   printf("Exited Successfully");
                   break;
            default :printf("Invalid choicee");
                   
        }
    }
    return 0;
}
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
